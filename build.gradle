plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'com.palantir.graal' version "0.9.0"
}

repositories {
    mavenCentral()
    maven { url = "https://s3-eu-west-1.amazonaws.com/maven.seqera.io/snapshots" }
}

dependencies {
    implementation 'javax.activation:activation:1.1.1'
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'ch.qos.logback:logback-core:1.2.5'
    implementation 'ch.qos.logback:logback-classic:1.2.5'
    implementation 'io.seqera:tower-java-sdk:1.0.0-SNAPSHOT'
    implementation 'info.picocli:picocli:4.6.1'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.1'

    testImplementation 'org.mock-server:mockserver-client-java:5.11.2'
    testImplementation 'org.mock-server:mockserver-netty:5.11.2'
    testImplementation 'org.mock-server:mockserver-junit-jupiter:5.11.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}

String gitVersion() {
    def p = new ProcessBuilder().command('sh', '-c', 'git rev-parse --short HEAD').start()
    def r = p.waitFor()
    return r == 0 ? p.text.trim() : '(unknown)'
}

task buildInfo {
    doLast {
        def version = rootProject.file('VERSION').text.trim()
        def versionApi = rootProject.file('VERSION-API').text.trim()
        def commitId = gitVersion().trim()
        def info = """\
                    version=${version}
                    versionApi=${versionApi}
                    commitId=${commitId}
                """.stripIndent().toString()
        def f = file("src/main/resources/META-INF/build-info.properties")
        f.parentFile.mkdirs()
        f.text = info
    }
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    options.compilerArgs += ["-Aproject=${project.name}"]
    dependsOn buildInfo
}

application {
    // Define the main class for the application.
    mainClassName = 'io.seqera.tower.cli.Tower'
    applicationDefaultJvmArgs = ["-agentlib:native-image-agent=config-merge-dir=conf/"]
}


test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

graal {
    graalVersion '21.1.0'
    javaVersion '11'
    mainClass 'io.seqera.tower.cli.Tower'
    outputName 'towr'
    option '--no-fallback'
    option '--no-server'
    option '--allow-incomplete-classpath'
    option '--report-unsupported-elements-at-runtime'
    option '-H:+AddAllCharsets'
    option '-H:EnableURLProtocols=https,http'
    option '-H:ConfigurationFileDirectories=conf/'
    option '-H:+ReportExceptionStackTraces'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
