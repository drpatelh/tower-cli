/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.seqera.tower.cli;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.mockserver.client.MockServerClient;
import org.mockserver.integration.ClientAndServer;
import picocli.CommandLine;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockserver.integration.ClientAndServer.startClientAndServer;
import static org.mockserver.matchers.Times.exactly;
import static org.mockserver.model.HttpRequest.request;
import static org.mockserver.model.HttpResponse.response;

public abstract class BaseCmdTest {

    public static Integer PORT = 1080;
    public static ClientAndServer mockServer;

    @BeforeAll
    public static void startServer() {
        mockServer = startClientAndServer(PORT);
    }

    @AfterAll
    public static void stopServer() {
        mockServer.stop();
    }

    public static CommandLine buildCmd(StringWriter stdOut, StringWriter stdErr) {
        CommandLine cmd = new CommandLine(new Tower());
        cmd.setOut(new PrintWriter(stdOut));
        cmd.setErr(new PrintWriter(stdErr));
        return cmd;
    }

    protected byte[] loadResponse(String name) {
        try {
            return this.getClass().getResourceAsStream("/runcmd/" + name + ".json").readAllBytes();
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

}
