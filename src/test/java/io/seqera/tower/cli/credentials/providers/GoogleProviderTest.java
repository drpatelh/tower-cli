/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.seqera.tower.cli.credentials.providers;

import io.seqera.tower.cli.BaseCmdTest;
import io.seqera.tower.cli.responses.CredentialsCreated;
import org.junit.jupiter.api.Test;
import org.mockserver.client.MockServerClient;
import org.mockserver.model.MediaType;

import java.io.IOException;
import java.nio.file.NoSuchFileException;

import static io.seqera.tower.cli.commands.AbstractApiCmd.USER_WORKSPACE_NAME;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockserver.matchers.Times.exactly;
import static org.mockserver.model.HttpRequest.request;
import static org.mockserver.model.HttpResponse.response;

class GoogleProviderTest extends BaseCmdTest {

    @Test
    void testCreate(MockServerClient mock) throws IOException {

        mock.when(
                request().withMethod("POST").withPath("/credentials").withBody("{\"credentials\":{\"keys\":{\"data\":\"private_key\",\"provider\":\"google\"},\"name\":\"google\",\"provider\":\"google\"}}"), exactly(1)
        ).respond(
                response().withStatusCode(200).withBody("{\"credentialsId\":\"1cz5A8cuBkB5iJliCwJCFU\"}").withContentType(MediaType.APPLICATION_JSON)
        );

        ExecOut out = exec(mock, "credentials", "create", "google", "-n", "google", "-k", tempFile("private_key", "id_rsa", ""));

        assertEquals("", out.stdErr);
        assertEquals(new CredentialsCreated("google", "1cz5A8cuBkB5iJliCwJCFU", "google", USER_WORKSPACE_NAME).toString(), out.stdOut);
        assertEquals(0, out.exitCode);

    }

    @Test
    void testFileNotFound(MockServerClient mock) {

        ExecOut out = exec(mock, "credentials", "create", "google", "-n", "google", "-k", "/random_path/not_found.key");

        assertEquals(errorMessage(out.app, new NoSuchFileException("/random_path/not_found.key")), out.stdErr);
        assertEquals("", out.stdOut);
        assertEquals(-1, out.exitCode);
    }

}
